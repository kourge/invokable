{
  "name": "invokable",
  "version": "1.0.2",
  "description": "a way to make invokable JavaScript objects",
  "main": "lib/index.js",
  "types": "lib/index.d.ts",
  "directories": {
    "lib": "lib"
  },
  "scripts": {
    "test": "jest",
    "build": "tsc",
    "bench": "ts-node ./benchmark/index.ts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/kourge/invokable.git"
  },
  "keywords": [
    "function",
    "call",
    "invoke",
    "callable",
    "invokable",
    "invocable",
    "object",
    "class"
  ],
  "author": "Wil Lee <kourge@gmail.com>",
  "contributors": [
    "Michal Vlas√°k <daeatel@gmail.com>"
  ],
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kourge/invokable/issues"
  },
  "homepage": "https://github.com/kourge/invokable#readme",
  "devDependencies": {
    "@types/benchmark": "^1.0.31",
    "@types/jest": "^22.2.0",
    "benchmark": "^2.1.4",
    "jest": "^22.4.2",
    "prettier": "^1.11.1",
    "ts-jest": "^22.4.1",
    "ts-node": "^5.0.1",
    "typescript": "^2.7.2"
  },
  "jest": {
    "transform": {
      "^.+\\.tsx?$": "ts-jest"
    },
    "testRegex": "(/__tests__/.*|(\\.|/)(test|spec))\\.(jsx?|tsx?)$",
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js",
      "jsx",
      "json",
      "node"
    ]
  }
}
